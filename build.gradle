apply plugin: 'java'
apply plugin: 'application'
import groovy.json.JsonSlurper

sourceCompatibility = 1.7
targetCompatibility = 1.7

group 'org.iot.dsa'

mainClassName = 'org.iot.dsa.dslink.DSLink'

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    flatDir { dirs 'dsa_lib' }
}

dependencies {
    //Java DSLink SDK
    compile 'org.iot.dsa:dslink-core:+'
    compile 'org.iot.dsa:dslink-websocket-standalone:+'
    compile 'org.glassfish.tyrus.bundles:tyrus-standalone-client:+'
    //c3p0 for connection pools
    compile 'com.mchange:c3p0:+'

//    compile 'org.apache.commons:commons-lang3:3.4'
//    compile 'org.apache.commons:commons-dbcp2:2.1.1'
//    compile 'org.apache.commons:commons-pool2:2.4.2'

    //JDBC Drivers
    compile 'mysql:mysql-connector-java:+'
    compile 'com.h2database:h2:+'
    compile 'org.postgresql:postgresql:+'

    testCompile 'junit:junit:+'
}

applicationDistribution.from(new File(project.projectDir, "/dslink.json"))

build {
    //Gets version from dslink.json file
    def inputFile = file("dslink.json")
    def json = new JsonSlurper().parseText(inputFile.text)
    version = json.version
}

run {
//    if (project.hasProperty("appArgs")) {
//        args Eval.me(appArgs)
//    }
//    args System.getProperty("exec.args", "").split()
    //workingDir project.buildDir
}

